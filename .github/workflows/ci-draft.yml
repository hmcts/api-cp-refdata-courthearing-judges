name: Build and Publish (DRAFT CANDIDATE VERSION)

on:
  pull_request:
    branches:
      - master
      - main
  push:
    branches:
      - master
      - main

env:
  FILE_PATH_OPENAPI: "src/main/resources/openapi"

jobs:
  Artefact-Version:
    runs-on: ubuntu-latest
    outputs:
      artefact_version: ${{ steps.artefact.outputs.draft_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate Artefact Version
        id: artefact
        uses: hmcts/artefact-version-action@v1
        with:
          release: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Update-Spec-Version:
    needs: [Artefact-Version]
    runs-on: ubuntu-latest
    outputs:
      openapi_file: ${{ steps.find_spec.outputs.openapi_file }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Find OpenAPI file
        id: find_spec
        run: |
          FILE=$(find "${FILE_PATH_OPENAPI}" -name "*.openapi.yml" | head -n 1)
          if [ -z "$FILE" ]; then
            echo "⚠️ *** No OpenAPI spec (*.openapi.yml) found. Skipping publishing draft. ***"
            exit 1
          fi
          echo "openapi_file=$FILE" >> $GITHUB_OUTPUT

      - name: Update info.version in OpenAPI spec using yq
        env:
          API_ORG: HMCTS-DTS
          API_NAME: ${{ github.event.repository.name }}
          API_VERSION: ${{ needs.Artefact-Version.outputs.artefact_version }}
        uses: mikefarah/yq@v4.45.4
        with:
          cmd: |
            yq '
              .info.version = strenv(API_VERSION) |
              .servers[0].url = "https://virtserver.swaggerhub.com/" + strenv(API_ORG) + "/" + strenv(API_NAME) + "/" + strenv(API_VERSION)
            ' "${{ steps.find_spec.outputs.openapi_file }}" > openapi-versioned.yml

      - name: Replace original OpenAPI file
        run: mv openapi-versioned.yml "${{ steps.find_spec.outputs.openapi_file }}"

      - name: Upload updated OpenAPI file
        uses: actions/upload-artifact@v4
        with:
          name: updated-openapi-spec
          path: ${{ steps.find_spec.outputs.openapi_file }}

  Test:
    name: Test - Java ${{ matrix.java }}
    strategy:
      matrix:
        java: [21, 23]
    runs-on: ubuntu-latest
    needs: [Artefact-Version, Update-Spec-Version]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: current

      - name: Download updated OpenAPI file
        uses: actions/download-artifact@v4
        with:
          name: updated-openapi-spec
          path: ${{ env.FILE_PATH_OPENAPI }}

      - name: Gradle Build
        env:
          ARTEFACT_VERSION: ${{ needs.Artefact-Version.outputs.artefact_version }}
          JAVA_VERSION: ${{ matrix.java }}
        run: |
          echo "Building with ARTEFACT_VERSION=$ARTEFACT_VERSION using Java $JAVA_VERSION"
          gradle build -DAPI_SPEC_VERSION=$ARTEFACT_VERSION

  Publish:
    name: Publish Artefact
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [Artefact-Version, Update-Spec-Version, Test]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 23

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Download updated OpenAPI file
        uses: actions/download-artifact@v4
        with:
          name: updated-openapi-spec
          path: ${{ env.FILE_PATH_OPENAPI }}

      - name: Gradle Publish
        env:
          ARTEFACT_VERSION: ${{ needs.Artefact-Version.outputs.artefact_version }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AZURE_DEVOPS_ARTIFACT_USERNAME: ${{ secrets.AZURE_DEVOPS_ARTIFACT_USERNAME }}
          AZURE_DEVOPS_ARTIFACT_TOKEN: ${{ secrets.AZURE_DEVOPS_ARTIFACT_TOKEN }}
        run: |
          echo "Publishing artefact for ARTEFACT_VERSION=$ARTEFACT_VERSION"
          gradle build -x test publish \
            -DAPI_SPEC_VERSION=$ARTEFACT_VERSION \
            -DGITHUB_REPOSITORY=${{ github.repository }} \
            -DGITHUB_ACTOR=${{ github.actor }} \
            -DGITHUB_TOKEN=$GITHUB_TOKEN \
            -DAZURE_DEVOPS_ARTIFACT_USERNAME=$AZURE_DEVOPS_ARTIFACT_USERNAME \
            -DAZURE_DEVOPS_ARTIFACT_TOKEN=$AZURE_DEVOPS_ARTIFACT_TOKEN
